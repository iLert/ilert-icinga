object User "ilert-high-priority" {
  display_name = "iLert - high priority"
  groups = [ "icingaadmins" ]
  states = [ OK, Warning, Critical, Unknown]
  types = [ Problem, Recovery, Acknowledgement ]
  vars.additional_notes = "This is an iLert user for high priority incidents."
  pager = "{{YOUR_API_KEY}}"
}

object User "ilert-low-priority" {
  display_name = "iLert - low priority"
  groups = [ "icingaadmins" ]
  states = [ OK, Warning, Critical, Unknown]
  types = [ Problem, Recovery, Acknowledgement ]
  vars.additional_notes = "This is an iLert user for low priority incidents."
  pager = "{{YOUR_API_KEY}}"
}

object NotificationCommand "ilert-notification-high-priority" {
  import "plugin-notification-command"

  command = "/usr/local/bin/ilert-icinga.py --mode save --endpoint https://api.ilert.com"

  env = {
    ICINGA_PRIORITY = "HIGH"
    ICINGA_CONTACTPAGER = "$user.pager$"
    ICINGA_NOTIFICATIONTYPE = "$notification.type$"
    ICINGA_NOTIFICATIONAUTHORNAME = "$notification.author$"
    ICINGA_NOTIFICATIONCOMMENT = "$notification.comment$"
    ICINGA_LONGDATETIME = "$icinga.long_date_time$"
    ICINGA_HOSTADDRESS = "$address$"
    ICINGA_HOSTNAME = "$host.name$"
    ICINGA_HOSTALIAS = "$host.display_name$"
    ICINGA_HOSTSTATE = "$host.state$"
    ICINGA_HOSTOUTPUT="$host.output$"
    ICINGA_HOSTZONE="$host.zone$"
    ICINGA_HOSTNOTESURL = "$host.notes_url$"
    ICINGA_HOSTACTIONURL = "$host.action_url$"
    ICINGA_HOSTICONIMAGE = "$host.icon_image$"
    ICINGA_HOSTICONIMAGEALT = "$host.icon_image_alt$"
    ICINGA_SERVICESTATE = "$service.state$"
    ICINGA_SERVICEDESC = "$service.name$"
    ICINGA_SERVICEDISPLAYNAME = "$service.display_name$"
    ICINGA_SERVICEOUTPUT = "$service.output$"
    ICINGA_SERVICENOTESURL = "$service.notes_url$"
    ICINGA_SERVICEACTIONURL = "$service.action_url$"
    ICINGA_SERVICEICONIMAGE = "$service.icon_image$"
    ICINGA_SERVICEICONIMAGEALT = "$service.icon_image_alt$"
  }
}

object NotificationCommand "ilert-notification-low-priority" {
  import "plugin-notification-command"

  command = "/usr/local/bin/ilert-icinga.py --mode save --endpoint https://api.ilert.com"

  env = {
    ICINGA_PRIORITY= "LOW"
    ICINGA_CONTACTPAGER = "$user.pager$"
    ICINGA_NOTIFICATIONTYPE = "$notification.type$"
    ICINGA_NOTIFICATIONAUTHORNAME = "$notification.author$"
    ICINGA_NOTIFICATIONCOMMENT = "$notification.comment$"
    ICINGA_LONGDATETIME = "$icinga.long_date_time$"
    ICINGA_HOSTADDRESS = "$address$"
    ICINGA_HOSTNAME = "$host.name$"
    ICINGA_HOSTALIAS = "$host.display_name$"
    ICINGA_HOSTSTATE = "$host.state$"
    ICINGA_HOSTOUTPUT="$host.output$"
    ICINGA_HOSTZONE="$host.zone$"
    ICINGA_HOSTNOTESURL = "$host.notes_url$"
    ICINGA_HOSTACTIONURL = "$host.action_url$"
    ICINGA_HOSTICONIMAGE = "$host.icon_image$"
    ICINGA_HOSTICONIMAGEALT = "$host.icon_image_alt$"
    ICINGA_SERVICESTATE = "$service.state$"
    ICINGA_SERVICEDESC = "$service.name$"
    ICINGA_SERVICEDISPLAYNAME = "$service.display_name$"
    ICINGA_SERVICEOUTPUT = "$service.output$"
    ICINGA_SERVICENOTESURL = "$service.notes_url$"
    ICINGA_SERVICEACTIONURL = "$service.action_url$"
    ICINGA_SERVICEICONIMAGE = "$service.icon_image$"
    ICINGA_SERVICEICONIMAGEALT = "$service.icon_image_alt$"
  }
}

apply Notification "ilert-host-notification-low-priority" to Host {
  command = "ilert-notification-low-priority"
  states = [ Up, Down ]
  types = [ Problem, Acknowledgement, Recovery ]
  period = "24x7"
  users = [ "ilert-low-priority" ]

  assign where host.vars.notification.enable_ilert_low_priority == true
}

apply Notification "ilert-host-notification-high-priority" to Host {
  command = "ilert-notification-high-priority"
  states = [ Up, Down ]
  types = [ Problem, Acknowledgement, Recovery ]
  period = "24x7"
  users = [ "ilert-high-priority" ]

  assign where host.vars.notification.enable_ilert_high_priority == true
}

apply Notification "ilert-service-notification-low-priority" to Service {
  command = "ilert-notification-low-priority"
  states = [ OK, Warning, Critical, Unknown ]
  types = [ Problem, Acknowledgement, Recovery ]
  period = "24x7"
  users = [ "ilert-low-priority" ]

  assign where service.vars.notification.enable_ilert_low_priority == true
}

apply Notification "ilert-service-notification-high-priority" to Service {
  command = "ilert-notification-high-priority"
  states = [ OK, Warning, Critical, Unknown ]
  types = [ Problem, Acknowledgement, Recovery ]
  period = "24x7"
  users = [ "ilert-high-priority" ]

  assign where service.vars.notification.enable_ilert_high_priority == true
}
